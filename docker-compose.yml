version: "3.7"

services:
  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./__images__/php-fpm
      args:
        - PHP_VERSION=7.3
        - INSTALL_XDEBUG=FALSE
        - INSTALL_PCOV=false
        - INSTALL_MEMCACHED=FALSE
        - INSTALL_PGSQL=TRUE
        - INSTALL_PG_CLIENT=TRUE
        - USER_ID=1000
        - USER_GROUP=1000
    volumes:
      - .:/var/www:cached
      - ./__images__/php-fpm/php7.3.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
    networks:
      - backend

  ### NGINX Server #########################################
  nginx:
    build:
      context: ./__images__/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=php-fpm
        - PHP_UPSTREAM_PORT=9000
    volumes:
      - .:/var/www
      - ./__images__/nginx/logs:/var/log/nginx
      - ./__images__/nginx/sites/:/etc/nginx/sites-available
      - ./__images__/nginx/ssl/:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  ### PostgreSQL ###########################################
  postgres:
    build:
      context: ./__images__/postgres
      args:
        - POSTGRES_VERSION=alpine
    volumes:
      - ${DATA_PATH_HOST}/postgres:/var/lib/postgresql/data
      - ${POSTGRES_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

  ### Adminer ###########################################
  adminer:
    build:
      context: ./__images__/adminer
    ports:
      - "8080:8080"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  ### pgAdmin ##############################################
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     - "PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}"
  #     - "PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}"
  #   ports:
  #     - "${PGADMIN_PORT}:80"
  #   volumes:
  #     - ${DATA_PATH_HOST}/pgadmin:/var/lib/pgadmin
  #   depends_on:
  #     - postgres
  #   networks:
  #     - frontend
  #     - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres:
    driver: local
  docker-in-docker:
    driver: local
